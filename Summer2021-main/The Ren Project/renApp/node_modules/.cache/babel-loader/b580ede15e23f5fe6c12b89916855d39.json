{"ast":null,"code":"import { getRenNetworkDetails, RenNetwork } from \"@renproject/interfaces\";\nimport { Callable, utilsWithChainNetwork } from \"@renproject/utils\";\nimport { EthereumClass } from \"./ethereum\";\nimport { StandardExplorer } from \"./networks\";\nimport { addressIsValid, transactionIsValid } from \"./utils\";\nexport const renFantomTestnet = {\n  name: \"Fantom Testnet\",\n  chain: \"fantomTestnet\",\n  isTestnet: true,\n  chainLabel: \"Fantom Testnet\",\n  networkID: 0xfa2,\n  addresses: {\n    GatewayRegistry: \"0x1207765B53697a046DCF4AE95bd4dE99ef9D3D3C\",\n    BasicAdapter: \"0x07deB3917d234f787AEd86E0c88E829277D4a33b\"\n  },\n  publicProvider: () => `https://rpc.testnet.fantom.network/`,\n  explorer: StandardExplorer(\"https://testnet.ftmscan.com\"),\n\n  /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */\n  infura: \"https://rpc.testnet.fantom.network/\",\n\n  /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */\n  etherscan: \"https://testnet.ftmscan.com\"\n};\nexport const renFantomDevnet = Object.assign(Object.assign({}, renFantomTestnet), {\n  addresses: {\n    GatewayRegistry: \"0xD881213F5ABF783d93220e6bD3Cc21706A8dc1fC\",\n    BasicAdapter: \"0xD087b0540e172553c12DEEeCDEf3dFD21Ec02066\"\n  }\n});\nexport const renFantomMainnet = {\n  name: \"Fantom Mainnet\",\n  chain: \"fantomMainnet\",\n  isTestnet: false,\n  chainLabel: \"Fantom Mainnet\",\n  networkID: 250,\n  addresses: {\n    GatewayRegistry: \"0x21C482f153D0317fe85C60bE1F7fa079019fcEbD\",\n    BasicAdapter: \"0xAC23817f7E9Ec7EB6B7889BDd2b50e04a44470c5\"\n  },\n  publicProvider: () => `https://rpcapi.fantom.network`,\n  explorer: StandardExplorer(\"https://ftmscan.com\"),\n\n  /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */\n  infura: \"https://rpcapi.fantom.network\",\n\n  /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */\n  etherscan: \"https://ftmscan.com\"\n};\nexport const FantomConfigMap = {\n  [RenNetwork.TestnetVDot3]: renFantomTestnet,\n  [RenNetwork.MainnetVDot3]: renFantomMainnet,\n  [RenNetwork.DevnetVDot3]: renFantomDevnet\n};\n\nconst resolveFantomNetwork = renNetwork => {\n  if (!renNetwork) {\n    return FantomConfigMap[RenNetwork.MainnetVDot3];\n  }\n\n  if (renNetwork.addresses) {\n    return renNetwork;\n  } else {\n    const details = getRenNetworkDetails( // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    renNetwork);\n    return details.isTestnet ? details.name === RenNetwork.DevnetVDot3 ? renFantomDevnet : renFantomTestnet : renFantomMainnet;\n  }\n};\n\nexport class FantomClass extends EthereumClass {\n  constructor(web3Provider, renNetwork) {\n    // To be compatible with the Ethereum chain class, the first parameter\n    // is a web3Provider and the second the RenVM network. However,\n    super(web3Provider, resolveFantomNetwork(renNetwork));\n    this.chain = FantomClass.chain;\n    this.name = FantomClass.chain;\n    this.legacyName = undefined;\n    this.configMap = FantomConfigMap;\n    this.utils = utilsWithChainNetwork(FantomClass.utils, () => this.renNetworkDetails);\n\n    this.initialize = renNetwork => {\n      this.renNetworkDetails = this.renNetworkDetails || FantomConfigMap[getRenNetworkDetails(renNetwork).name];\n\n      if (!this.renNetworkDetails) {\n        throw new Error(`Unable to set ${this.name} network for RenVM network ${getRenNetworkDetails(renNetwork).name}. Please provide ${this.name} network details to ${this.name} constructor.`);\n      }\n\n      return this;\n    };\n  }\n\n}\nFantomClass.chain = \"Fantom\";\nFantomClass.configMap = FantomConfigMap;\nFantomClass.utils = {\n  resolveChainNetwork: resolveFantomNetwork,\n  addressIsValid,\n  transactionIsValid,\n  addressExplorerLink: (address, network) => `${(FantomClass.utils.resolveChainNetwork(network) || renFantomMainnet).etherscan}/address/${address}`,\n  transactionExplorerLink: (transaction, network) => `${(Fantom.utils.resolveChainNetwork(network) || renFantomMainnet).etherscan}/tx/${transaction || \"\"}`\n}; // @dev Removes any static fields, except `utils`.\n\nexport const Fantom = Callable(FantomClass);","map":{"version":3,"sources":["../../src/fantom.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { getRenNetworkDetails, RenNetwork, } from \"@renproject/interfaces\";\nimport { Callable, utilsWithChainNetwork } from \"@renproject/utils\";\nimport { EthereumClass } from \"./ethereum\";\nimport { StandardExplorer } from \"./networks\";\nimport { addressIsValid, transactionIsValid } from \"./utils\";\nexport const renFantomTestnet = {\n    name: \"Fantom Testnet\",\n    chain: \"fantomTestnet\",\n    isTestnet: true,\n    chainLabel: \"Fantom Testnet\",\n    networkID: 0xfa2,\n    addresses: {\n        GatewayRegistry: \"0x1207765B53697a046DCF4AE95bd4dE99ef9D3D3C\",\n        BasicAdapter: \"0x07deB3917d234f787AEd86E0c88E829277D4a33b\",\n    },\n    publicProvider: () => `https://rpc.testnet.fantom.network/`,\n    explorer: StandardExplorer(\"https://testnet.ftmscan.com\"),\n    /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */\n    infura: \"https://rpc.testnet.fantom.network/\",\n    /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */\n    etherscan: \"https://testnet.ftmscan.com\",\n};\nexport const renFantomDevnet = Object.assign(Object.assign({}, renFantomTestnet), { addresses: {\n        GatewayRegistry: \"0xD881213F5ABF783d93220e6bD3Cc21706A8dc1fC\",\n        BasicAdapter: \"0xD087b0540e172553c12DEEeCDEf3dFD21Ec02066\",\n    } });\nexport const renFantomMainnet = {\n    name: \"Fantom Mainnet\",\n    chain: \"fantomMainnet\",\n    isTestnet: false,\n    chainLabel: \"Fantom Mainnet\",\n    networkID: 250,\n    addresses: {\n        GatewayRegistry: \"0x21C482f153D0317fe85C60bE1F7fa079019fcEbD\",\n        BasicAdapter: \"0xAC23817f7E9Ec7EB6B7889BDd2b50e04a44470c5\",\n    },\n    publicProvider: () => `https://rpcapi.fantom.network`,\n    explorer: StandardExplorer(\"https://ftmscan.com\"),\n    /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */\n    infura: \"https://rpcapi.fantom.network\",\n    /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */\n    etherscan: \"https://ftmscan.com\",\n};\nexport const FantomConfigMap = {\n    [RenNetwork.TestnetVDot3]: renFantomTestnet,\n    [RenNetwork.MainnetVDot3]: renFantomMainnet,\n    [RenNetwork.DevnetVDot3]: renFantomDevnet,\n};\nconst resolveFantomNetwork = (renNetwork) => {\n    if (!renNetwork) {\n        return FantomConfigMap[RenNetwork.MainnetVDot3];\n    }\n    if (renNetwork.addresses) {\n        return renNetwork;\n    }\n    else {\n        const details = getRenNetworkDetails(\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n        renNetwork);\n        return details.isTestnet\n            ? details.name === RenNetwork.DevnetVDot3\n                ? renFantomDevnet\n                : renFantomTestnet\n            : renFantomMainnet;\n    }\n};\nexport class FantomClass extends EthereumClass {\n    constructor(web3Provider, renNetwork) {\n        // To be compatible with the Ethereum chain class, the first parameter\n        // is a web3Provider and the second the RenVM network. However,\n        super(web3Provider, resolveFantomNetwork(renNetwork));\n        this.chain = FantomClass.chain;\n        this.name = FantomClass.chain;\n        this.legacyName = undefined;\n        this.configMap = FantomConfigMap;\n        this.utils = utilsWithChainNetwork(FantomClass.utils, () => this.renNetworkDetails);\n        this.initialize = (renNetwork) => {\n            this.renNetworkDetails =\n                this.renNetworkDetails ||\n                    FantomConfigMap[getRenNetworkDetails(renNetwork).name];\n            if (!this.renNetworkDetails) {\n                throw new Error(`Unable to set ${this.name} network for RenVM network ${getRenNetworkDetails(renNetwork).name}. Please provide ${this.name} network details to ${this.name} constructor.`);\n            }\n            return this;\n        };\n    }\n}\nFantomClass.chain = \"Fantom\";\nFantomClass.configMap = FantomConfigMap;\nFantomClass.utils = {\n    resolveChainNetwork: resolveFantomNetwork,\n    addressIsValid,\n    transactionIsValid,\n    addressExplorerLink: (address, network) => `${(FantomClass.utils.resolveChainNetwork(network) ||\n        renFantomMainnet).etherscan}/address/${address}`,\n    transactionExplorerLink: (transaction, network) => `${(Fantom.utils.resolveChainNetwork(network) || renFantomMainnet)\n        .etherscan}/tx/${transaction || \"\"}`,\n};\n// @dev Removes any static fields, except `utils`.\nexport const Fantom = Callable(FantomClass);\n//# sourceMappingURL=fantom.js.map"]},"metadata":{},"sourceType":"module"}