{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Callable } from \"@renproject/utils\";\nimport axios from \"axios\";\nimport { fixUTXO, fixUTXOs, sortUTXOs, DEFAULT_TIMEOUT } from \"./API\";\nexport var SoChainNetwork;\n\n(function (SoChainNetwork) {\n  SoChainNetwork[\"BTC\"] = \"BTC\";\n  SoChainNetwork[\"LTC\"] = \"LTC\";\n  SoChainNetwork[\"ZEC\"] = \"ZEC\";\n  SoChainNetwork[\"DOGE\"] = \"DOGE\";\n  SoChainNetwork[\"DASH\"] = \"DASH\";\n  SoChainNetwork[\"BTCTEST\"] = \"BTCTEST\";\n  SoChainNetwork[\"LTCTEST\"] = \"LTCTEST\";\n  SoChainNetwork[\"ZECTEST\"] = \"ZECTEST\";\n  SoChainNetwork[\"DOGETEST\"] = \"DOGETEST\";\n  SoChainNetwork[\"DASHTEST\"] = \"DASHTEST\";\n})(SoChainNetwork || (SoChainNetwork = {}));\n\nexport class SoChainClass {\n  constructor(network = SoChainNetwork.BTC) {\n    this.fetchUTXO = (txHash, vOut) => __awaiter(this, void 0, void 0, function* () {\n      const url = `https://sochain.com/api/v2/get_tx/${this.network}/${txHash}`;\n      const response = yield axios.get(url, {\n        timeout: DEFAULT_TIMEOUT\n      });\n      const tx = response.data.data;\n      return fixUTXO({\n        txHash: tx.txid,\n        amount: tx.outputs[vOut].value.toString(),\n        vOut,\n        confirmations: tx.confirmations\n      }, 8);\n    });\n\n    this.fetchUTXOs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n      const url = `https://sochain.com/api/v2/get_tx_unspent/${this.network}/${address}/${confirmations}`;\n      const response = yield axios.get(url, {\n        timeout: DEFAULT_TIMEOUT\n      });\n      return fixUTXOs(response.data.data.txs.map(utxo => ({\n        txHash: utxo.txid,\n        amount: utxo.value.toString(),\n        // scriptPubKey: utxo.script_hex,\n        vOut: utxo.output_no,\n        confirmations: utxo.confirmations\n      })), 8).filter(utxo => confirmations === 0 || utxo.confirmations >= confirmations).sort(sortUTXOs);\n    });\n\n    this.fetchTXs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n      const url = `https://sochain.com/api/v2/get_tx_received/${this.network}/${address}/${confirmations}`;\n      const response = yield axios.get(url, {\n        timeout: DEFAULT_TIMEOUT\n      });\n      return fixUTXOs(response.data.data.txs.map(utxo => ({\n        txHash: utxo.txid,\n        amount: utxo.value.toString(),\n        // scriptPubKey: utxo.script_hex,\n        vOut: utxo.output_no,\n        confirmations: utxo.confirmations\n      })), 8).filter(utxo => confirmations === 0 || utxo.confirmations >= confirmations).sort(sortUTXOs);\n    });\n\n    this.broadcastTransaction = txHex => __awaiter(this, void 0, void 0, function* () {\n      const response = yield axios.post(`https://sochain.com/api/v2/send_tx/${this.network}`, {\n        tx_hex: txHex\n      }, {\n        timeout: DEFAULT_TIMEOUT\n      });\n      return response.data.data.txid;\n    });\n\n    this.network = network;\n  }\n\n}\nexport const SoChain = Callable(SoChainClass);","map":{"version":3,"sources":["../../../src/APIs/sochain.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Callable } from \"@renproject/utils\";\nimport axios from \"axios\";\nimport { fixUTXO, fixUTXOs, sortUTXOs, DEFAULT_TIMEOUT, } from \"./API\";\nexport var SoChainNetwork;\n(function (SoChainNetwork) {\n    SoChainNetwork[\"BTC\"] = \"BTC\";\n    SoChainNetwork[\"LTC\"] = \"LTC\";\n    SoChainNetwork[\"ZEC\"] = \"ZEC\";\n    SoChainNetwork[\"DOGE\"] = \"DOGE\";\n    SoChainNetwork[\"DASH\"] = \"DASH\";\n    SoChainNetwork[\"BTCTEST\"] = \"BTCTEST\";\n    SoChainNetwork[\"LTCTEST\"] = \"LTCTEST\";\n    SoChainNetwork[\"ZECTEST\"] = \"ZECTEST\";\n    SoChainNetwork[\"DOGETEST\"] = \"DOGETEST\";\n    SoChainNetwork[\"DASHTEST\"] = \"DASHTEST\";\n})(SoChainNetwork || (SoChainNetwork = {}));\nexport class SoChainClass {\n    constructor(network = SoChainNetwork.BTC) {\n        this.fetchUTXO = (txHash, vOut) => __awaiter(this, void 0, void 0, function* () {\n            const url = `https://sochain.com/api/v2/get_tx/${this.network}/${txHash}`;\n            const response = yield axios.get(url, { timeout: DEFAULT_TIMEOUT });\n            const tx = response.data.data;\n            return fixUTXO({\n                txHash: tx.txid,\n                amount: tx.outputs[vOut].value.toString(),\n                vOut,\n                confirmations: tx.confirmations,\n            }, 8);\n        });\n        this.fetchUTXOs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n            const url = `https://sochain.com/api/v2/get_tx_unspent/${this.network}/${address}/${confirmations}`;\n            const response = yield axios.get(url, { timeout: DEFAULT_TIMEOUT });\n            return fixUTXOs(response.data.data.txs.map((utxo) => ({\n                txHash: utxo.txid,\n                amount: utxo.value.toString(),\n                // scriptPubKey: utxo.script_hex,\n                vOut: utxo.output_no,\n                confirmations: utxo.confirmations,\n            })), 8)\n                .filter((utxo) => confirmations === 0 || utxo.confirmations >= confirmations)\n                .sort(sortUTXOs);\n        });\n        this.fetchTXs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n            const url = `https://sochain.com/api/v2/get_tx_received/${this.network}/${address}/${confirmations}`;\n            const response = yield axios.get(url, { timeout: DEFAULT_TIMEOUT });\n            return fixUTXOs(response.data.data.txs.map((utxo) => ({\n                txHash: utxo.txid,\n                amount: utxo.value.toString(),\n                // scriptPubKey: utxo.script_hex,\n                vOut: utxo.output_no,\n                confirmations: utxo.confirmations,\n            })), 8)\n                .filter((utxo) => confirmations === 0 || utxo.confirmations >= confirmations)\n                .sort(sortUTXOs);\n        });\n        this.broadcastTransaction = (txHex) => __awaiter(this, void 0, void 0, function* () {\n            const response = yield axios.post(`https://sochain.com/api/v2/send_tx/${this.network}`, { tx_hex: txHex }, { timeout: DEFAULT_TIMEOUT });\n            return response.data.data.txid;\n        });\n        this.network = network;\n    }\n}\nexport const SoChain = Callable(SoChainClass);\n//# sourceMappingURL=sochain.js.map"]},"metadata":{},"sourceType":"module"}