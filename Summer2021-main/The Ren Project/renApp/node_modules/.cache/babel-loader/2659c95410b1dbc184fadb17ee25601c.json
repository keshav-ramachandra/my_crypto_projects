{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { LCDClient } from \"@terra-money/terra.js\";\nimport { TerraNetwork } from \"./deposit\"; // Cache clients\n\nconst clients = {};\nexport const getHeight = network => __awaiter(void 0, void 0, void 0, function* () {\n  // connect to testnet\n  let prefix;\n\n  switch (network) {\n    case TerraNetwork.Columbus:\n      prefix = \"lcd\";\n      break;\n\n    case TerraNetwork.Tequila:\n      prefix = \"tequila-lcd\";\n      break;\n\n    default:\n      throw new Error(`Terra network ${String(network)} not supported.`);\n  }\n\n  const terra = clients[network] || new LCDClient({\n    URL: `https://${String(prefix)}.terra.dev`,\n    chainID: network\n  });\n  clients[network] = terra;\n  const result = yield terra.tendermint.blockInfo();\n  return parseInt(result.block.header.height, 10);\n});","map":{"version":3,"sources":["../../../src/api/height.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAT,QAA0B,uBAA1B;AAEA,SAAS,YAAT,QAA6B,WAA7B,C,CAEA;;AACA,MAAM,OAAO,GAAG,EAAhB;AAEA,OAAO,MAAM,SAAS,GAAU,OAAP,IAAiD,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACtE;AAEA,MAAI,MAAJ;;AACA,UAAQ,OAAR;AACI,SAAK,YAAY,CAAC,QAAlB;AACI,MAAA,MAAM,GAAG,KAAT;AACA;;AACJ,SAAK,YAAY,CAAC,OAAlB;AACI,MAAA,MAAM,GAAG,aAAT;AACA;;AACJ;AACI,YAAM,IAAI,KAAJ,CAAU,iBAAiB,MAAM,CAAC,OAAD,CAAS,iBAA1C,CAAN;AARR;;AAWA,QAAM,KAAK,GACP,OAAO,CAAC,OAAD,CAAP,IACA,IAAI,SAAJ,CAAc;AACV,IAAA,GAAG,EAAE,WAAW,MAAM,CAAC,MAAD,CAAQ,YADpB;AAEV,IAAA,OAAO,EAAE;AAFC,GAAd,CAFJ;AAMA,EAAA,OAAO,CAAC,OAAD,CAAP,GAAmB,KAAnB;AAEA,QAAM,MAAM,GAAG,MAAM,KAAK,CAAC,UAAN,CAAiB,SAAjB,EAArB;AAEA,SAAO,QAAQ,CAAC,MAAM,CAAC,KAAP,CAAa,MAAb,CAAoB,MAArB,EAA6B,EAA7B,CAAf;AACH,CA1ByE,CAAnE","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { LCDClient } from \"@terra-money/terra.js\";\nimport { TerraNetwork } from \"./deposit\";\n// Cache clients\nconst clients = {};\nexport const getHeight = (network) => __awaiter(void 0, void 0, void 0, function* () {\n    // connect to testnet\n    let prefix;\n    switch (network) {\n        case TerraNetwork.Columbus:\n            prefix = \"lcd\";\n            break;\n        case TerraNetwork.Tequila:\n            prefix = \"tequila-lcd\";\n            break;\n        default:\n            throw new Error(`Terra network ${String(network)} not supported.`);\n    }\n    const terra = clients[network] ||\n        new LCDClient({\n            URL: `https://${String(prefix)}.terra.dev`,\n            chainID: network,\n        });\n    clients[network] = terra;\n    const result = yield terra.tendermint.blockInfo();\n    return parseInt(result.block.header.height, 10);\n});\n//# sourceMappingURL=height.js.map"]},"metadata":{},"sourceType":"module"}