{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Callable, isDefined } from \"@renproject/utils\";\nimport axios from \"axios\";\nimport https from \"https\";\nimport { fixUTXO, fixValue, sortUTXOs, DEFAULT_TIMEOUT } from \"./API\";\nexport class InsightClass {\n  constructor(url) {\n    this.fetchUTXOs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n      const url = `${this.url}/addr/${address}/utxo`;\n      const response = yield axios.get(url, {\n        // TODO: Remove when certificate is fixed.\n        httpsAgent: new https.Agent({\n          rejectUnauthorized: false\n        }),\n        timeout: DEFAULT_TIMEOUT\n      });\n      const data = typeof response.data === \"string\" ? JSON.parse(response.data) : response.data;\n      return (yield Promise.all(data.filter(utxo => confirmations === 0 || utxo.confirmations >= confirmations).map(utxo => ({\n        txHash: utxo.txid,\n        amount: isDefined(utxo.satoshis) ? utxo.satoshis.toString() : isDefined(utxo.amount) ? fixValue(utxo.amount, 8).toFixed() : undefined,\n        // script_hex: utxo.scriptPubKey,\n        vOut: utxo.vout,\n        confirmations: utxo.confirmations || 0\n      })) // If the amount is undefined, fetch the UTXO again.\n      // This is due to the Digibyte explorer not returning\n      // amounts correctly when fetching UTXOs.\n      .map(utxo => isDefined(utxo.amount) ? utxo : this.fetchUTXO(utxo.txHash, utxo.vOut)))).sort(sortUTXOs);\n    });\n\n    this.fetchTXs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n      const url = `${this.url}/txs/?address=${address}`;\n      const response = yield axios.get(url, {\n        // TODO: Remove when certificate is fixed.\n        httpsAgent: new https.Agent({\n          rejectUnauthorized: false\n        }),\n        timeout: DEFAULT_TIMEOUT\n      });\n      const data = typeof response.data === \"string\" ? JSON.parse(response.data) : response.data;\n      const received = [];\n\n      for (const tx of data.txs) {\n        for (let i = 0; i < tx.vout.length; i++) {\n          const vout = tx.vout[i];\n\n          if (vout.scriptPubKey.addresses.indexOf(address) >= 0) {\n            received.push({\n              txHash: tx.txid,\n              amount: fixValue(parseFloat(vout.value), 8).toFixed(),\n              vOut: i,\n              confirmations: tx.confirmations || 0\n            });\n          }\n        }\n      }\n\n      return received.filter(utxo => confirmations === 0 || utxo.confirmations >= confirmations).sort(sortUTXOs);\n    });\n\n    this.fetchUTXO = (txHash, vOut) => __awaiter(this, void 0, void 0, function* () {\n      const url = `${this.url}/tx/${txHash}`;\n      const tx = (yield axios.get(url, {\n        timeout: DEFAULT_TIMEOUT\n      })).data;\n      return fixUTXO({\n        txHash,\n        amount: tx.vout[vOut].value.toString(),\n        vOut,\n        confirmations: tx.confirmations\n      }, 8);\n    });\n\n    this.broadcastTransaction = txHex => __awaiter(this, void 0, void 0, function* () {\n      const url = `${this.url}/tx/send`;\n      const response = yield axios.post(url, {\n        rawtx: txHex\n      }, {\n        timeout: DEFAULT_TIMEOUT\n      });\n\n      if (response.data.error) {\n        throw new Error(response.data.error);\n      }\n\n      return response.data.txid;\n    });\n\n    this.url = url.replace(/\\/$/, \"\");\n  }\n\n}\nexport const Insight = Callable(InsightClass);","map":{"version":3,"sources":["../../../src/APIs/insight.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,QAAT,EAAmB,SAAnB,QAAoC,mBAApC;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SACI,OADJ,EAEI,QAFJ,EAGI,SAHJ,EAKI,eALJ,QAOO,OAPP;AASA,OAAM,MAAO,YAAP,CAAmB;AAGrB,EAAA,WAAA,CAAY,GAAZ,EAAuB;AAIvB,SAAA,UAAA,GAAa,CACT,OADS,EAET,aAAA,GAAwB,CAFf,KAGQ,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACjB,YAAM,GAAG,GAAG,GAAG,KAAK,GAAG,SAAS,OAAO,OAAvC;AACA,YAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAN,CAA2B,GAA3B,EAAgC;AACnD;AACA,QAAA,UAAU,EAAE,IAAI,KAAK,CAAC,KAAV,CAAgB;AACxB,UAAA,kBAAkB,EAAE;AADI,SAAhB,CAFuC;AAKnD,QAAA,OAAO,EAAE;AAL0C,OAAhC,CAAvB;AAQA,YAAM,IAAI,GACN,OAAO,QAAQ,CAAC,IAAhB,KAAyB,QAAzB,GACM,IAAI,CAAC,KAAL,CAAW,QAAQ,CAAC,IAApB,CADN,GAEM,QAAQ,CAAC,IAHnB;AAKA,aAAO,CACH,MAAM,OAAO,CAAC,GAAR,CACF,IAAI,CACC,MADL,CAES,IAAD,IACI,aAAa,KAAK,CAAlB,IACA,IAAI,CAAC,aAAL,IAAsB,aAJlC,EAMK,GANL,CAMU,IAAD,KAAW;AACZ,QAAA,MAAM,EAAE,IAAI,CAAC,IADD;AAEZ,QAAA,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,QAAN,CAAT,GACF,IAAI,CAAC,QAAL,CAAc,QAAd,EADE,GAEF,SAAS,CAAC,IAAI,CAAC,MAAN,CAAT,GACA,QAAQ,CAAC,IAAI,CAAC,MAAN,EAAc,CAAd,CAAR,CAAyB,OAAzB,EADA,GAEA,SANM;AAOZ;AACA,QAAA,IAAI,EAAE,IAAI,CAAC,IARC;AASZ,QAAA,aAAa,EAAE,IAAI,CAAC,aAAL,IAAsB;AATzB,OAAX,CANT,EAiBI;AACA;AACA;AAnBJ,OAoBK,GApBL,CAoBU,IAAD,IACD,SAAS,CAAC,IAAI,CAAC,MAAN,CAAT,GACO,IADP,GAEM,KAAK,SAAL,CAAe,IAAI,CAAC,MAApB,EAA4B,IAAI,CAAC,IAAjC,CAvBd,CADE,CADH,EA4BL,IA5BK,CA4BA,SA5BA,CAAP;AA6BH,KA5CoB,CAHrB;;AAiDA,SAAA,QAAA,GAAW,CACP,OADO,EAEP,aAAA,GAAwB,CAFjB,KAGU,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACjB,YAAM,GAAG,GAAG,GAAG,KAAK,GAAG,iBAAiB,OAAO,EAA/C;AACA,YAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAN,CAA0B,GAA1B,EAA+B;AAClD;AACA,QAAA,UAAU,EAAE,IAAI,KAAK,CAAC,KAAV,CAAgB;AACxB,UAAA,kBAAkB,EAAE;AADI,SAAhB,CAFsC;AAKlD,QAAA,OAAO,EAAE;AALyC,OAA/B,CAAvB;AAQA,YAAM,IAAI,GACN,OAAO,QAAQ,CAAC,IAAhB,KAAyB,QAAzB,GACM,IAAI,CAAC,KAAL,CAAW,QAAQ,CAAC,IAApB,CADN,GAEM,QAAQ,CAAC,IAHnB;AAKA,YAAM,QAAQ,GAAW,EAAzB;;AAEA,WAAK,MAAM,EAAX,IAAiB,IAAI,CAAC,GAAtB,EAA2B;AACvB,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EAAE,CAAC,IAAH,CAAQ,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACrC,gBAAM,IAAI,GAAG,EAAE,CAAC,IAAH,CAAQ,CAAR,CAAb;;AACA,cAAI,IAAI,CAAC,YAAL,CAAkB,SAAlB,CAA4B,OAA5B,CAAoC,OAApC,KAAgD,CAApD,EAAuD;AACnD,YAAA,QAAQ,CAAC,IAAT,CAAc;AACV,cAAA,MAAM,EAAE,EAAE,CAAC,IADD;AAEV,cAAA,MAAM,EAAE,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,KAAN,CAAX,EAAyB,CAAzB,CAAR,CAAoC,OAApC,EAFE;AAGV,cAAA,IAAI,EAAE,CAHI;AAIV,cAAA,aAAa,EAAE,EAAE,CAAC,aAAH,IAAoB;AAJzB,aAAd;AAMH;AACJ;AACJ;;AAED,aAAO,QAAQ,CACV,MADE,CAEE,IAAD,IACI,aAAa,KAAK,CAAlB,IAAuB,IAAI,CAAC,aAAL,IAAsB,aAHlD,EAKF,IALE,CAKG,SALH,CAAP;AAMH,KArCoB,CAHrB;;AA0CA,SAAA,SAAA,GAAY,CAAO,MAAP,EAAuB,IAAvB,KAAsD,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAC9D,YAAM,GAAG,GAAG,GAAG,KAAK,GAAG,OAAO,MAAM,EAApC;AACA,YAAM,EAAE,GAAG,CACP,MAAM,KAAK,CAAC,GAAN,CAAsB,GAAtB,EAA2B;AAAE,QAAA,OAAO,EAAE;AAAX,OAA3B,CADC,EAET,IAFF;AAGA,aAAO,OAAO,CACV;AACI,QAAA,MADJ;AAEI,QAAA,MAAM,EAAE,EAAE,CAAC,IAAH,CAAQ,IAAR,EAAc,KAAd,CAAoB,QAApB,EAFZ;AAGI,QAAA,IAHJ;AAII,QAAA,aAAa,EAAE,EAAE,CAAC;AAJtB,OADU,EAOV,CAPU,CAAd;AASH,KAdiE,CAAlE;;AAgBA,SAAA,oBAAA,GAA8B,KAAP,IAAyC,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAC5D,YAAM,GAAG,GAAG,GAAG,KAAK,GAAG,UAAvB;AACA,YAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAN,CAIpB,GAJoB,EAIf;AAAE,QAAA,KAAK,EAAE;AAAT,OAJe,EAIG;AAAE,QAAA,OAAO,EAAE;AAAX,OAJH,CAAvB;;AAKA,UAAI,QAAQ,CAAC,IAAT,CAAc,KAAlB,EAAyB;AACrB,cAAM,IAAI,KAAJ,CAAU,QAAQ,CAAC,IAAT,CAAc,KAAxB,CAAN;AACH;;AACD,aAAO,QAAQ,CAAC,IAAT,CAAc,IAArB;AACH,KAX+D,CAAhE;;AA9GI,SAAK,GAAL,GAAW,GAAG,CAAC,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAX;AACH;;AALoB;AAkIzB,OAAO,MAAM,OAAO,GAAG,QAAQ,CAAC,YAAD,CAAxB","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Callable, isDefined } from \"@renproject/utils\";\nimport axios from \"axios\";\nimport https from \"https\";\nimport { fixUTXO, fixValue, sortUTXOs, DEFAULT_TIMEOUT, } from \"./API\";\nexport class InsightClass {\n    constructor(url) {\n        this.fetchUTXOs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.url}/addr/${address}/utxo`;\n            const response = yield axios.get(url, {\n                // TODO: Remove when certificate is fixed.\n                httpsAgent: new https.Agent({\n                    rejectUnauthorized: false,\n                }),\n                timeout: DEFAULT_TIMEOUT,\n            });\n            const data = typeof response.data === \"string\"\n                ? JSON.parse(response.data)\n                : response.data;\n            return (yield Promise.all(data\n                .filter((utxo) => confirmations === 0 ||\n                utxo.confirmations >= confirmations)\n                .map((utxo) => ({\n                txHash: utxo.txid,\n                amount: isDefined(utxo.satoshis)\n                    ? utxo.satoshis.toString()\n                    : isDefined(utxo.amount)\n                        ? fixValue(utxo.amount, 8).toFixed()\n                        : undefined,\n                // script_hex: utxo.scriptPubKey,\n                vOut: utxo.vout,\n                confirmations: utxo.confirmations || 0,\n            }))\n                // If the amount is undefined, fetch the UTXO again.\n                // This is due to the Digibyte explorer not returning\n                // amounts correctly when fetching UTXOs.\n                .map((utxo) => isDefined(utxo.amount)\n                ? utxo\n                : this.fetchUTXO(utxo.txHash, utxo.vOut)))).sort(sortUTXOs);\n        });\n        this.fetchTXs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.url}/txs/?address=${address}`;\n            const response = yield axios.get(url, {\n                // TODO: Remove when certificate is fixed.\n                httpsAgent: new https.Agent({\n                    rejectUnauthorized: false,\n                }),\n                timeout: DEFAULT_TIMEOUT,\n            });\n            const data = typeof response.data === \"string\"\n                ? JSON.parse(response.data)\n                : response.data;\n            const received = [];\n            for (const tx of data.txs) {\n                for (let i = 0; i < tx.vout.length; i++) {\n                    const vout = tx.vout[i];\n                    if (vout.scriptPubKey.addresses.indexOf(address) >= 0) {\n                        received.push({\n                            txHash: tx.txid,\n                            amount: fixValue(parseFloat(vout.value), 8).toFixed(),\n                            vOut: i,\n                            confirmations: tx.confirmations || 0,\n                        });\n                    }\n                }\n            }\n            return received\n                .filter((utxo) => confirmations === 0 || utxo.confirmations >= confirmations)\n                .sort(sortUTXOs);\n        });\n        this.fetchUTXO = (txHash, vOut) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.url}/tx/${txHash}`;\n            const tx = (yield axios.get(url, { timeout: DEFAULT_TIMEOUT })).data;\n            return fixUTXO({\n                txHash,\n                amount: tx.vout[vOut].value.toString(),\n                vOut,\n                confirmations: tx.confirmations,\n            }, 8);\n        });\n        this.broadcastTransaction = (txHex) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.url}/tx/send`;\n            const response = yield axios.post(url, { rawtx: txHex }, { timeout: DEFAULT_TIMEOUT });\n            if (response.data.error) {\n                throw new Error(response.data.error);\n            }\n            return response.data.txid;\n        });\n        this.url = url.replace(/\\/$/, \"\");\n    }\n}\nexport const Insight = Callable(InsightClass);\n//# sourceMappingURL=insight.js.map"]},"metadata":{},"sourceType":"module"}