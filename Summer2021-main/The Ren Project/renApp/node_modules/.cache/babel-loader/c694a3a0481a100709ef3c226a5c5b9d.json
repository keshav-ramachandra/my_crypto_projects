{"ast":null,"code":"export var RenNetwork;\n\n(function (RenNetwork) {\n  RenNetwork[\"Mainnet\"] = \"mainnet\";\n  RenNetwork[\"Testnet\"] = \"testnet\"; // Staging\n\n  RenNetwork[\"MainnetVDot3\"] = \"mainnet-v0.3\";\n  RenNetwork[\"TestnetVDot3\"] = \"testnet-v0.3\";\n  RenNetwork[\"DevnetVDot3\"] = \"devnet-v0.3\";\n  RenNetwork[\"Localnet\"] = \"localnet\";\n})(RenNetwork || (RenNetwork = {}));\n\nconst renMainnet = {\n  name: RenNetwork.Mainnet,\n  lightnode: \"https://lightnode-mainnet.herokuapp.com\",\n  isTestnet: false\n};\nconst renTestnet = {\n  name: RenNetwork.Testnet,\n  lightnode: \"https://lightnode-testnet.herokuapp.com\",\n  isTestnet: true\n};\nconst renMainnetVDot3 = {\n  name: RenNetwork.MainnetVDot3,\n  lightnode: \"https://lightnode-mainnet.herokuapp.com/\",\n  isTestnet: false\n};\nconst renTestnetVDot3 = {\n  name: RenNetwork.TestnetVDot3,\n  lightnode: \"https://lightnode-testnet.herokuapp.com/\",\n  isTestnet: true\n};\nconst renDevnetVDot3 = {\n  name: RenNetwork.DevnetVDot3,\n  lightnode: \"https://lightnode-devnet.herokuapp.com/\",\n  isTestnet: true\n};\nconst renLocalnet = {\n  name: RenNetwork.Localnet,\n  lightnode: \"http://localhost:5000\",\n  isTestnet: true\n};\nexport const getRenNetworkDetails = renNetwork => {\n  switch (renNetwork) {\n    case RenNetwork.Mainnet:\n    case RenNetwork.Mainnet:\n      return renMainnet;\n\n    case RenNetwork.Testnet:\n    case RenNetwork.Testnet:\n      return renTestnet;\n\n    case RenNetwork.MainnetVDot3:\n    case RenNetwork.MainnetVDot3:\n      return renMainnetVDot3;\n\n    case RenNetwork.TestnetVDot3:\n    case RenNetwork.TestnetVDot3:\n      return renTestnetVDot3;\n\n    case RenNetwork.DevnetVDot3:\n    case RenNetwork.DevnetVDot3:\n      return renDevnetVDot3;\n\n    case RenNetwork.Localnet:\n    case RenNetwork.Localnet:\n      return renLocalnet;\n\n    default:\n      return renNetwork;\n  }\n};\nexport const RenNetworks = [RenNetwork.Mainnet, RenNetwork.Testnet, RenNetwork.MainnetVDot3, RenNetwork.TestnetVDot3, RenNetwork.DevnetVDot3, RenNetwork.Localnet];","map":{"version":3,"sources":["../../src/networks.ts"],"names":[],"mappings":"AAAA,OAAA,IAAY,UAAZ;;AAAA,CAAA,UAAY,UAAZ,EAAsB;AAClB,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,SAAA,CAFkB,CAIlB;;AACA,EAAA,UAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,UAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,UAAA,CAAA,aAAA,CAAA,GAAA,aAAA;AACA,EAAA,UAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACH,CATD,EAAY,UAAU,KAAV,UAAU,GAAA,EAAA,CAAtB;;AAiBA,MAAM,UAAU,GAAsB;AAClC,EAAA,IAAI,EAAE,UAAU,CAAC,OADiB;AAElC,EAAA,SAAS,EAAE,yCAFuB;AAGlC,EAAA,SAAS,EAAE;AAHuB,CAAtC;AAKA,MAAM,UAAU,GAAsB;AAClC,EAAA,IAAI,EAAE,UAAU,CAAC,OADiB;AAElC,EAAA,SAAS,EAAE,yCAFuB;AAGlC,EAAA,SAAS,EAAE;AAHuB,CAAtC;AAKA,MAAM,eAAe,GAAsB;AACvC,EAAA,IAAI,EAAE,UAAU,CAAC,YADsB;AAEvC,EAAA,SAAS,EAAE,0CAF4B;AAGvC,EAAA,SAAS,EAAE;AAH4B,CAA3C;AAKA,MAAM,eAAe,GAAsB;AACvC,EAAA,IAAI,EAAE,UAAU,CAAC,YADsB;AAEvC,EAAA,SAAS,EAAE,0CAF4B;AAGvC,EAAA,SAAS,EAAE;AAH4B,CAA3C;AAKA,MAAM,cAAc,GAAsB;AACtC,EAAA,IAAI,EAAE,UAAU,CAAC,WADqB;AAEtC,EAAA,SAAS,EAAE,yCAF2B;AAGtC,EAAA,SAAS,EAAE;AAH2B,CAA1C;AAKA,MAAM,WAAW,GAAsB;AACnC,EAAA,IAAI,EAAE,UAAU,CAAC,QADkB;AAEnC,EAAA,SAAS,EAAE,uBAFwB;AAGnC,EAAA,SAAS,EAAE;AAHwB,CAAvC;AAMA,OAAO,MAAM,oBAAoB,GAC7B,UADgC,IAEb;AACnB,UAAQ,UAAR;AACI,SAAK,UAAU,CAAC,OAAhB;AACA,SAAK,UAAU,CAAC,OAAhB;AACI,aAAO,UAAP;;AACJ,SAAK,UAAU,CAAC,OAAhB;AACA,SAAK,UAAU,CAAC,OAAhB;AACI,aAAO,UAAP;;AACJ,SAAK,UAAU,CAAC,YAAhB;AACA,SAAK,UAAU,CAAC,YAAhB;AACI,aAAO,eAAP;;AACJ,SAAK,UAAU,CAAC,YAAhB;AACA,SAAK,UAAU,CAAC,YAAhB;AACI,aAAO,eAAP;;AACJ,SAAK,UAAU,CAAC,WAAhB;AACA,SAAK,UAAU,CAAC,WAAhB;AACI,aAAO,cAAP;;AACJ,SAAK,UAAU,CAAC,QAAhB;AACA,SAAK,UAAU,CAAC,QAAhB;AACI,aAAO,WAAP;;AACJ;AACI,aAAO,UAAP;AApBR;AAsBH,CAzBM;AAmCP,OAAO,MAAM,WAAW,GAAG,CACvB,UAAU,CAAC,OADY,EAEvB,UAAU,CAAC,OAFY,EAGvB,UAAU,CAAC,YAHY,EAIvB,UAAU,CAAC,YAJY,EAKvB,UAAU,CAAC,WALY,EAMvB,UAAU,CAAC,QANY,CAApB","sourceRoot":"","sourcesContent":["export var RenNetwork;\n(function (RenNetwork) {\n    RenNetwork[\"Mainnet\"] = \"mainnet\";\n    RenNetwork[\"Testnet\"] = \"testnet\";\n    // Staging\n    RenNetwork[\"MainnetVDot3\"] = \"mainnet-v0.3\";\n    RenNetwork[\"TestnetVDot3\"] = \"testnet-v0.3\";\n    RenNetwork[\"DevnetVDot3\"] = \"devnet-v0.3\";\n    RenNetwork[\"Localnet\"] = \"localnet\";\n})(RenNetwork || (RenNetwork = {}));\nconst renMainnet = {\n    name: RenNetwork.Mainnet,\n    lightnode: \"https://lightnode-mainnet.herokuapp.com\",\n    isTestnet: false,\n};\nconst renTestnet = {\n    name: RenNetwork.Testnet,\n    lightnode: \"https://lightnode-testnet.herokuapp.com\",\n    isTestnet: true,\n};\nconst renMainnetVDot3 = {\n    name: RenNetwork.MainnetVDot3,\n    lightnode: \"https://lightnode-mainnet.herokuapp.com/\",\n    isTestnet: false,\n};\nconst renTestnetVDot3 = {\n    name: RenNetwork.TestnetVDot3,\n    lightnode: \"https://lightnode-testnet.herokuapp.com/\",\n    isTestnet: true,\n};\nconst renDevnetVDot3 = {\n    name: RenNetwork.DevnetVDot3,\n    lightnode: \"https://lightnode-devnet.herokuapp.com/\",\n    isTestnet: true,\n};\nconst renLocalnet = {\n    name: RenNetwork.Localnet,\n    lightnode: \"http://localhost:5000\",\n    isTestnet: true,\n};\nexport const getRenNetworkDetails = (renNetwork) => {\n    switch (renNetwork) {\n        case RenNetwork.Mainnet:\n        case RenNetwork.Mainnet:\n            return renMainnet;\n        case RenNetwork.Testnet:\n        case RenNetwork.Testnet:\n            return renTestnet;\n        case RenNetwork.MainnetVDot3:\n        case RenNetwork.MainnetVDot3:\n            return renMainnetVDot3;\n        case RenNetwork.TestnetVDot3:\n        case RenNetwork.TestnetVDot3:\n            return renTestnetVDot3;\n        case RenNetwork.DevnetVDot3:\n        case RenNetwork.DevnetVDot3:\n            return renDevnetVDot3;\n        case RenNetwork.Localnet:\n        case RenNetwork.Localnet:\n            return renLocalnet;\n        default:\n            return renNetwork;\n    }\n};\nexport const RenNetworks = [\n    RenNetwork.Mainnet,\n    RenNetwork.Testnet,\n    RenNetwork.MainnetVDot3,\n    RenNetwork.TestnetVDot3,\n    RenNetwork.DevnetVDot3,\n    RenNetwork.Localnet,\n];\n//# sourceMappingURL=networks.js.map"]},"metadata":{},"sourceType":"module"}