{"ast":null,"code":"export const StandardExplorer = baseUrl => ({\n  address: address => `${baseUrl.replace(/\\/$/, \"\")}/address/${address}`,\n  transaction: transaction => `${baseUrl.replace(/\\/$/, \"\")}/tx/${transaction || \"\"}`\n});\nconst ethereumConfig = {\n  mainnet: {\n    chain: \"main\",\n    isTestnet: false,\n    chainLabel: \"Ethereum\",\n    networkID: 1,\n    publicProvider: ({\n      infura\n    } = {}) => `https://mainnet.infura.io/v3/${infura || \"\"}`,\n    explorer: StandardExplorer(\"https://etherscan.io\"),\n\n    /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */\n    infura: \"https://mainnet.infura.io\",\n\n    /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */\n    etherscan: \"https://etherscan.io\"\n  },\n  kovan: {\n    chain: \"kovan\",\n    isTestnet: true,\n    chainLabel: \"Kovan\",\n    networkID: 42,\n    publicProvider: ({\n      infura\n    } = {}) => `https://kovan.infura.io/v3/${infura || \"\"}`,\n    explorer: StandardExplorer(\"https://kovan.etherscan.io\"),\n\n    /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */\n    infura: \"https://kovan.infura.io\",\n\n    /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */\n    etherscan: \"https://kovan.etherscan.io\"\n  },\n  rinkeby: {\n    chain: \"rinkeby\",\n    isTestnet: true,\n    chainLabel: \"Rinkeby\",\n    networkID: 4,\n    publicProvider: ({\n      infura\n    } = {}) => `https://rinkeby.infura.io/v3/${infura || \"\"}`,\n    explorer: StandardExplorer(\"https://rinkeby.etherscan.io\"),\n\n    /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */\n    infura: \"https://rinkeby.infura.io\",\n\n    /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */\n    etherscan: \"https://rinkeby.etherscan.io\"\n  }\n};\nexport const renMainnet = Object.assign(Object.assign({\n  name: \"Mainnet\"\n}, ethereumConfig.mainnet), {\n  addresses: {\n    GatewayRegistry: \"0xe80d347DF1209a76DD9d2319d62912ba98C54DDD\",\n    BasicAdapter: \"0x32666B64e9fD0F44916E1378Efb2CFa3B3B96e80\"\n  }\n});\nexport const renTestnet = Object.assign(Object.assign({\n  name: \"Testnet\"\n}, ethereumConfig.kovan), {\n  addresses: {\n    GatewayRegistry: \"0x557e211EC5fc9a6737d2C6b7a1aDe3e0C11A8D5D\",\n    BasicAdapter: \"0x7DDFA2e5435027f6e13Ca8Db2f32ebd5551158Bb\"\n  }\n});\nexport const renDevnetVDot3 = Object.assign(Object.assign({\n  name: \"Devnet v0.3\"\n}, ethereumConfig.kovan), {\n  addresses: {\n    GatewayRegistry: \"0x5045E727D9D9AcDe1F6DCae52B078EC30dC95455\",\n    BasicAdapter: \"0xFABDB1F53Ef8B080332621cBc9F820a39e7A1B83\"\n  }\n});\nexport const renTestnetVDot3 = Object.assign(Object.assign({\n  name: \"Testnet v0.3\"\n}, ethereumConfig.kovan), {\n  addresses: {\n    GatewayRegistry: \"0x557e211EC5fc9a6737d2C6b7a1aDe3e0C11A8D5D\",\n    BasicAdapter: \"0x7DDFA2e5435027f6e13Ca8Db2f32ebd5551158Bb\"\n  }\n});\nexport const renMainnetVDot3 = Object.assign(Object.assign({\n  name: \"Mainnet v0.3\"\n}, ethereumConfig.mainnet), {\n  addresses: {\n    GatewayRegistry: \"0x503670EC851C55EC1aCFB5230192da921467a24e\",\n    BasicAdapter: \"0xAe65b0f676313Fd715F29D07538d1dc8557f2b1A\"\n  }\n});","map":{"version":3,"sources":["../../src/networks.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export const StandardExplorer = (baseUrl) => ({\n    address: (address) => `${baseUrl.replace(/\\/$/, \"\")}/address/${address}`,\n    transaction: (transaction) => `${baseUrl.replace(/\\/$/, \"\")}/tx/${transaction || \"\"}`,\n});\nconst ethereumConfig = {\n    mainnet: {\n        chain: \"main\",\n        isTestnet: false,\n        chainLabel: \"Ethereum\",\n        networkID: 1,\n        publicProvider: ({ infura } = {}) => `https://mainnet.infura.io/v3/${infura || \"\"}`,\n        explorer: StandardExplorer(\"https://etherscan.io\"),\n        /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */\n        infura: \"https://mainnet.infura.io\",\n        /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */\n        etherscan: \"https://etherscan.io\",\n    },\n    kovan: {\n        chain: \"kovan\",\n        isTestnet: true,\n        chainLabel: \"Kovan\",\n        networkID: 42,\n        publicProvider: ({ infura } = {}) => `https://kovan.infura.io/v3/${infura || \"\"}`,\n        explorer: StandardExplorer(\"https://kovan.etherscan.io\"),\n        /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */\n        infura: \"https://kovan.infura.io\",\n        /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */\n        etherscan: \"https://kovan.etherscan.io\",\n    },\n    rinkeby: {\n        chain: \"rinkeby\",\n        isTestnet: true,\n        chainLabel: \"Rinkeby\",\n        networkID: 4,\n        publicProvider: ({ infura } = {}) => `https://rinkeby.infura.io/v3/${infura || \"\"}`,\n        explorer: StandardExplorer(\"https://rinkeby.etherscan.io\"),\n        /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */\n        infura: \"https://rinkeby.infura.io\",\n        /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */\n        etherscan: \"https://rinkeby.etherscan.io\",\n    },\n};\nexport const renMainnet = Object.assign(Object.assign({ name: \"Mainnet\" }, ethereumConfig.mainnet), { addresses: {\n        GatewayRegistry: \"0xe80d347DF1209a76DD9d2319d62912ba98C54DDD\",\n        BasicAdapter: \"0x32666B64e9fD0F44916E1378Efb2CFa3B3B96e80\",\n    } });\nexport const renTestnet = Object.assign(Object.assign({ name: \"Testnet\" }, ethereumConfig.kovan), { addresses: {\n        GatewayRegistry: \"0x557e211EC5fc9a6737d2C6b7a1aDe3e0C11A8D5D\",\n        BasicAdapter: \"0x7DDFA2e5435027f6e13Ca8Db2f32ebd5551158Bb\",\n    } });\nexport const renDevnetVDot3 = Object.assign(Object.assign({ name: \"Devnet v0.3\" }, ethereumConfig.kovan), { addresses: {\n        GatewayRegistry: \"0x5045E727D9D9AcDe1F6DCae52B078EC30dC95455\",\n        BasicAdapter: \"0xFABDB1F53Ef8B080332621cBc9F820a39e7A1B83\",\n    } });\nexport const renTestnetVDot3 = Object.assign(Object.assign({ name: \"Testnet v0.3\" }, ethereumConfig.kovan), { addresses: {\n        GatewayRegistry: \"0x557e211EC5fc9a6737d2C6b7a1aDe3e0C11A8D5D\",\n        BasicAdapter: \"0x7DDFA2e5435027f6e13Ca8Db2f32ebd5551158Bb\",\n    } });\nexport const renMainnetVDot3 = Object.assign(Object.assign({ name: \"Mainnet v0.3\" }, ethereumConfig.mainnet), { addresses: {\n        GatewayRegistry: \"0x503670EC851C55EC1aCFB5230192da921467a24e\",\n        BasicAdapter: \"0xAe65b0f676313Fd715F29D07538d1dc8557f2b1A\",\n    } });\n//# sourceMappingURL=networks.js.map"]},"metadata":{},"sourceType":"module"}