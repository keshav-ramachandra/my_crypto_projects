{"ast":null,"code":"import { hash160, sha256 } from \"@renproject/utils\";\nimport { Opcode } from \"./opcodes\";\n\nconst checksum = hash => sha256(sha256(hash)).slice(0, 4);\n\nexport class Script {\n  constructor() {\n    this.OP = Opcode;\n\n    this.addOp = op => {\n      this.script = Buffer.concat([this.script, Buffer.from([op])]);\n      return this;\n    };\n\n    this.addData = data => {\n      this.script = Buffer.concat([this.script, Buffer.from([data.length]), data]);\n      return this;\n    };\n\n    this.toBuffer = () => this.script;\n\n    this.toScriptHashOut = () => {\n      return new Script().addOp(Script.OP.OP_HASH160).addData(hash160(this.toBuffer())).addOp(Script.OP.OP_EQUAL).toBuffer();\n    };\n\n    this.toAddress = prefix => {\n      // Hash\n      const hash = hash160(this.toBuffer()); // Prepend prefix\n\n      const hashWithPrefix = Buffer.concat([prefix, hash]); // Append checksum\n\n      const hashWithChecksum = Buffer.concat([hashWithPrefix, checksum(hashWithPrefix)]);\n      return hashWithChecksum;\n    };\n\n    this.script = Buffer.from([]);\n  }\n\n}\nScript.OP = Opcode;","map":{"version":3,"sources":["../../../src/script/script.ts"],"names":[],"mappings":"AAAA,SAAS,OAAT,EAAkB,MAAlB,QAAgC,mBAAhC;AAEA,SAAS,MAAT,QAAuB,WAAvB;;AAEA,MAAM,QAAQ,GAAI,IAAD,IAAkB,MAAM,CAAC,MAAM,CAAC,IAAD,CAAP,CAAN,CAAqB,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAAnC;;AAEA,OAAM,MAAO,MAAP,CAAa;AAMf,EAAA,WAAA,GAAA;AAFO,SAAA,EAAA,GAAK,MAAL;;AAMP,SAAA,KAAA,GAAS,EAAD,IAAe;AACnB,WAAK,MAAL,GAAc,MAAM,CAAC,MAAP,CAAc,CAAC,KAAK,MAAN,EAAc,MAAM,CAAC,IAAP,CAAY,CAAC,EAAD,CAAZ,CAAd,CAAd,CAAd;AACA,aAAO,IAAP;AACH,KAHD;;AAKA,SAAA,OAAA,GAAW,IAAD,IAAiB;AACvB,WAAK,MAAL,GAAc,MAAM,CAAC,MAAP,CAAc,CACxB,KAAK,MADmB,EAExB,MAAM,CAAC,IAAP,CAAY,CAAC,IAAI,CAAC,MAAN,CAAZ,CAFwB,EAGxB,IAHwB,CAAd,CAAd;AAKA,aAAO,IAAP;AACH,KAPD;;AASA,SAAA,QAAA,GAAW,MAAM,KAAK,MAAtB;;AAEA,SAAA,eAAA,GAAkB,MAAa;AAC3B,aAAO,IAAI,MAAJ,GACF,KADE,CACI,MAAM,CAAC,EAAP,CAAU,UADd,EAEF,OAFE,CAEM,OAAO,CAAC,KAAK,QAAL,EAAD,CAFb,EAGF,KAHE,CAGI,MAAM,CAAC,EAAP,CAAU,QAHd,EAIF,QAJE,EAAP;AAKH,KAND;;AAQA,SAAA,SAAA,GAAa,MAAD,IAA2B;AACnC;AACA,YAAM,IAAI,GAAG,OAAO,CAAC,KAAK,QAAL,EAAD,CAApB,CAFmC,CAInC;;AACA,YAAM,cAAc,GAAG,MAAM,CAAC,MAAP,CAAc,CAAC,MAAD,EAAS,IAAT,CAAd,CAAvB,CALmC,CAOnC;;AACA,YAAM,gBAAgB,GAAG,MAAM,CAAC,MAAP,CAAc,CACnC,cADmC,EAEnC,QAAQ,CAAC,cAAD,CAF2B,CAAd,CAAzB;AAKA,aAAO,gBAAP;AACH,KAdD;;AA3BI,SAAK,MAAL,GAAc,MAAM,CAAC,IAAP,CAAY,EAAZ,CAAd;AACH;;AARc;AAGR,MAAA,CAAA,EAAA,GAAK,MAAL","sourceRoot":"","sourcesContent":["import { hash160, sha256 } from \"@renproject/utils\";\nimport { Opcode } from \"./opcodes\";\nconst checksum = (hash) => sha256(sha256(hash)).slice(0, 4);\nexport class Script {\n    constructor() {\n        this.OP = Opcode;\n        this.addOp = (op) => {\n            this.script = Buffer.concat([this.script, Buffer.from([op])]);\n            return this;\n        };\n        this.addData = (data) => {\n            this.script = Buffer.concat([\n                this.script,\n                Buffer.from([data.length]),\n                data,\n            ]);\n            return this;\n        };\n        this.toBuffer = () => this.script;\n        this.toScriptHashOut = () => {\n            return new Script()\n                .addOp(Script.OP.OP_HASH160)\n                .addData(hash160(this.toBuffer()))\n                .addOp(Script.OP.OP_EQUAL)\n                .toBuffer();\n        };\n        this.toAddress = (prefix) => {\n            // Hash\n            const hash = hash160(this.toBuffer());\n            // Prepend prefix\n            const hashWithPrefix = Buffer.concat([prefix, hash]);\n            // Append checksum\n            const hashWithChecksum = Buffer.concat([\n                hashWithPrefix,\n                checksum(hashWithPrefix),\n            ]);\n            return hashWithChecksum;\n        };\n        this.script = Buffer.from([]);\n    }\n}\nScript.OP = Opcode;\n//# sourceMappingURL=script.js.map"]},"metadata":{},"sourceType":"module"}