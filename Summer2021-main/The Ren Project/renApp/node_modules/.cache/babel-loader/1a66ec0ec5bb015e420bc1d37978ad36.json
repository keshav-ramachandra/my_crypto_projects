{"ast":null,"code":"const v1SelectorRegex = /^(.*)0(.*)2(.*)$/;\nconst defaultMatch = [undefined, undefined, undefined, undefined];\n/**\n * parseV1Selector splits a RenVM contract (e.g. `BTC0Eth2Btc`) into the asset\n * (`BTC`), the origin chain (`Eth`) and the target chain (`Btc`).\n */\n\nexport const parseV1Selector = selector => {\n  // re.exec(\"BTC0Eth2Btc\") => ['BTC0Eth2Btc', 'BTC', 'Eth', 'Btc']\n  const [, asset, from, to] = v1SelectorRegex.exec(selector) || defaultMatch;\n\n  if (!asset || !from || !to) {\n    throw new Error(`Invalid Ren Contract \"${selector}\"`);\n  }\n\n  return {\n    asset: asset,\n    from: from,\n    to: to\n  };\n};","map":{"version":3,"sources":["../../src/renVMUtils.ts"],"names":[],"mappings":"AAMA,MAAM,eAAe,GAAG,kBAAxB;AACA,MAAM,YAAY,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAArB;AAEA;;;AAGG;;AACH,OAAO,MAAM,eAAe,GAAI,QAAD,IAAwC;AACnE;AACA,QAAM,GAAG,KAAH,EAAU,IAAV,EAAgB,EAAhB,IAAsB,eAAe,CAAC,IAAhB,CAAqB,QAArB,KAAkC,YAA9D;;AACA,MAAI,CAAC,KAAD,IAAU,CAAC,IAAX,IAAmB,CAAC,EAAxB,EAA4B;AACxB,UAAM,IAAI,KAAJ,CAAU,yBAAyB,QAAQ,GAA3C,CAAN;AACH;;AAED,SAAO;AACH,IAAA,KAAK,EAAE,KADJ;AAEH,IAAA,IAAI,EAAE,IAFH;AAGH,IAAA,EAAE,EAAE;AAHD,GAAP;AAKH,CAZM","sourceRoot":"","sourcesContent":["const v1SelectorRegex = /^(.*)0(.*)2(.*)$/;\nconst defaultMatch = [undefined, undefined, undefined, undefined];\n/**\n * parseV1Selector splits a RenVM contract (e.g. `BTC0Eth2Btc`) into the asset\n * (`BTC`), the origin chain (`Eth`) and the target chain (`Btc`).\n */\nexport const parseV1Selector = (selector) => {\n    // re.exec(\"BTC0Eth2Btc\") => ['BTC0Eth2Btc', 'BTC', 'Eth', 'Btc']\n    const [, asset, from, to] = v1SelectorRegex.exec(selector) || defaultMatch;\n    if (!asset || !from || !to) {\n        throw new Error(`Invalid Ren Contract \"${selector}\"`);\n    }\n    return {\n        asset: asset,\n        from: from,\n        to: to,\n    };\n};\n//# sourceMappingURL=renVMUtils.js.map"]},"metadata":{},"sourceType":"module"}