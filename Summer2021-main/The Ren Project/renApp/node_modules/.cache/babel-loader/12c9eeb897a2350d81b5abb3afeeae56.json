{"ast":null,"code":"export var RPCMethod;\n\n(function (RPCMethod) {\n  // MethodSubmitGateway submits the details of a gateway to the lightnode,\n  // used for recovering mints that didn't get submitted to RenVM.\n  RPCMethod[\"SubmitGateway\"] = \"ren_submitGateway\"; // MethodSubmitTx submits a new transaction to the Darknode for acceptance\n  // into the transaction pool.\n\n  RPCMethod[\"SubmitTx\"] = \"ren_submitTx\"; // MethodQueryTx returns the latest information about a transaction\n  // identified by a transaction hash.\n\n  RPCMethod[\"QueryTx\"] = \"ren_queryTx\"; // MethodQueryTxs returns pages of transactions with optional filtering by\n  // status and tags.\n\n  RPCMethod[\"QueryTxs\"] = \"ren_queryTxs\"; // MethodQueryBlock returns a block identified by the block height.\n\n  RPCMethod[\"QueryBlock\"] = \"ren_queryBlock\"; // MethodQueryBlocks returns recently committed blocks.\n\n  RPCMethod[\"QueryBlocks\"] = \"ren_queryBlocks\"; // MethodQueryConfig returns the node configuration.\n\n  RPCMethod[\"QueryConfig\"] = \"ren_queryConfig\"; // MethodQueryState returns the contract state.\n\n  RPCMethod[\"QueryState\"] = \"ren_queryState\"; // MethodQueryBlockState returns the contract state.\n\n  RPCMethod[\"QueryBlockState\"] = \"ren_queryBlockState\";\n})(RPCMethod || (RPCMethod = {})); // The following lines will throw a type error if RenVMResponses or RenVMParams\n// aren't defined for all RPC methods.\n// type _responsesCheck = RenVMResponses[RPCMethod];\n// type _paramsCheck = RenVMParams[RPCMethod];\n\n\n() => {};\n\n() => {};","map":{"version":3,"sources":["../../../src/v2/methods.ts"],"names":[],"mappings":"AAcA,OAAA,IAAY,SAAZ;;AAAA,CAAA,UAAY,SAAZ,EAAqB;AACjB;AACA;AACA,EAAA,SAAA,CAAA,eAAA,CAAA,GAAA,mBAAA,CAHiB,CAKjB;AACA;;AACA,EAAA,SAAA,CAAA,UAAA,CAAA,GAAA,cAAA,CAPiB,CASjB;AACA;;AACA,EAAA,SAAA,CAAA,SAAA,CAAA,GAAA,aAAA,CAXiB,CAajB;AACA;;AACA,EAAA,SAAA,CAAA,UAAA,CAAA,GAAA,cAAA,CAfiB,CAiBjB;;AACA,EAAA,SAAA,CAAA,YAAA,CAAA,GAAA,gBAAA,CAlBiB,CAoBjB;;AACA,EAAA,SAAA,CAAA,aAAA,CAAA,GAAA,iBAAA,CArBiB,CAuBjB;;AACA,EAAA,SAAA,CAAA,aAAA,CAAA,GAAA,iBAAA,CAxBiB,CA0BjB;;AACA,EAAA,SAAA,CAAA,YAAA,CAAA,GAAA,gBAAA,CA3BiB,CA6BjB;;AACA,EAAA,SAAA,CAAA,iBAAA,CAAA,GAAA,qBAAA;AACH,CA/BD,EAAY,SAAS,KAAT,SAAS,GAAA,EAAA,CAArB,E,CAoNA;AACA;AACA;AACA;;;AACA,MAAoC,CAAG,CAAvC;;AACA,MAAuC,CAAG,CAA1C","sourceRoot":"","sourcesContent":["export var RPCMethod;\n(function (RPCMethod) {\n    // MethodSubmitGateway submits the details of a gateway to the lightnode,\n    // used for recovering mints that didn't get submitted to RenVM.\n    RPCMethod[\"SubmitGateway\"] = \"ren_submitGateway\";\n    // MethodSubmitTx submits a new transaction to the Darknode for acceptance\n    // into the transaction pool.\n    RPCMethod[\"SubmitTx\"] = \"ren_submitTx\";\n    // MethodQueryTx returns the latest information about a transaction\n    // identified by a transaction hash.\n    RPCMethod[\"QueryTx\"] = \"ren_queryTx\";\n    // MethodQueryTxs returns pages of transactions with optional filtering by\n    // status and tags.\n    RPCMethod[\"QueryTxs\"] = \"ren_queryTxs\";\n    // MethodQueryBlock returns a block identified by the block height.\n    RPCMethod[\"QueryBlock\"] = \"ren_queryBlock\";\n    // MethodQueryBlocks returns recently committed blocks.\n    RPCMethod[\"QueryBlocks\"] = \"ren_queryBlocks\";\n    // MethodQueryConfig returns the node configuration.\n    RPCMethod[\"QueryConfig\"] = \"ren_queryConfig\";\n    // MethodQueryState returns the contract state.\n    RPCMethod[\"QueryState\"] = \"ren_queryState\";\n    // MethodQueryBlockState returns the contract state.\n    RPCMethod[\"QueryBlockState\"] = \"ren_queryBlockState\";\n})(RPCMethod || (RPCMethod = {}));\n// The following lines will throw a type error if RenVMResponses or RenVMParams\n// aren't defined for all RPC methods.\n// type _responsesCheck = RenVMResponses[RPCMethod];\n// type _paramsCheck = RenVMParams[RPCMethod];\n() => { };\n() => { };\n//# sourceMappingURL=methods.js.map"]},"metadata":{},"sourceType":"module"}