{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unmarshalTypedPackValue = exports.unmarshalPackValue = exports.unmarshalPackArray = exports.unmarshalPackStruct = exports.unmarshalPackPrimitive = exports.PackPrimitive = void 0;\n\nconst utils_1 = require(\"@renproject/utils\");\n\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nvar PackPrimitive;\n\n(function (PackPrimitive) {\n  PackPrimitive[\"Bool\"] = \"bool\";\n  PackPrimitive[\"U8\"] = \"u8\";\n  PackPrimitive[\"U16\"] = \"u16\";\n  PackPrimitive[\"U32\"] = \"u32\";\n  PackPrimitive[\"U64\"] = \"u64\";\n  PackPrimitive[\"U128\"] = \"u128\";\n  PackPrimitive[\"U256\"] = \"u256\";\n  PackPrimitive[\"Str\"] = \"string\";\n  PackPrimitive[\"Bytes\"] = \"bytes\";\n  PackPrimitive[\"Bytes32\"] = \"bytes32\";\n  PackPrimitive[\"Bytes65\"] = \"bytes65\";\n})(PackPrimitive = exports.PackPrimitive || (exports.PackPrimitive = {})); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nconst unmarshalPackPrimitive = (type, value) => {\n  switch (type) {\n    // Booleans\n    case PackPrimitive.Bool:\n      return value;\n    // Integers\n\n    case PackPrimitive.U8:\n    case PackPrimitive.U16:\n    case PackPrimitive.U32:\n    case PackPrimitive.U64:\n    case PackPrimitive.U128:\n    case PackPrimitive.U256:\n      return new bignumber_js_1.default(value);\n    // Strings\n\n    case PackPrimitive.Str:\n      return value;\n    // Bytes\n\n    case PackPrimitive.Bytes:\n    case PackPrimitive.Bytes32:\n    case PackPrimitive.Bytes65:\n      return utils_1.fromBase64(value);\n  }\n};\n\nexports.unmarshalPackPrimitive = unmarshalPackPrimitive;\n\nconst unmarshalPackStruct = (type, value) => {\n  const struct = {};\n\n  for (const member of type.struct) {\n    const keys = Object.keys(member);\n\n    if (keys.length === 0) {\n      throw new Error(`Invalid struct member with no entries.`);\n    }\n\n    if (keys.length > 1) {\n      throw new Error(`Invalid struct member with multiple entries.`);\n    }\n\n    const key = Object.keys(member)[0];\n    const memberType = member[key];\n\n    if (value && !value.hasOwnProperty(key)) {\n      throw new Error(`Missing pack value for key ${key}.`);\n    }\n\n    struct[key] = exports.unmarshalPackValue(memberType, value[key]);\n  }\n\n  return struct;\n};\n\nexports.unmarshalPackStruct = unmarshalPackStruct;\n/**\n * Unmarshals a pack array.\n */\n\nconst unmarshalPackArray = (type, value) => {\n  return value.map(element => exports.unmarshalPackValue(type.list, element));\n};\n\nexports.unmarshalPackArray = unmarshalPackArray;\n\nconst unmarshalPackValue = (type, value) => {\n  if (Array.isArray(value)) {\n    return exports.unmarshalPackArray(type, value);\n  } else if (typeof type === \"object\") {\n    return exports.unmarshalPackStruct(type, value);\n  } else if (typeof type === \"string\") {\n    if (type === \"nil\") return null;\n    return exports.unmarshalPackPrimitive(type, value);\n  }\n\n  throw new Error(`Unknown value type ${String(type)}${!type ? ` for value ${String(value)}` : \"\"}.`);\n};\n\nexports.unmarshalPackValue = unmarshalPackValue;\n\nconst unmarshalTypedPackValue = ({\n  t,\n  v\n}) => {\n  return exports.unmarshalPackValue(t, v);\n};\n\nexports.unmarshalTypedPackValue = unmarshalTypedPackValue;","map":{"version":3,"sources":["../../../../src/v2/pack/pack.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unmarshalTypedPackValue = exports.unmarshalPackValue = exports.unmarshalPackArray = exports.unmarshalPackStruct = exports.unmarshalPackPrimitive = exports.PackPrimitive = void 0;\nconst utils_1 = require(\"@renproject/utils\");\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar PackPrimitive;\n(function (PackPrimitive) {\n    PackPrimitive[\"Bool\"] = \"bool\";\n    PackPrimitive[\"U8\"] = \"u8\";\n    PackPrimitive[\"U16\"] = \"u16\";\n    PackPrimitive[\"U32\"] = \"u32\";\n    PackPrimitive[\"U64\"] = \"u64\";\n    PackPrimitive[\"U128\"] = \"u128\";\n    PackPrimitive[\"U256\"] = \"u256\";\n    PackPrimitive[\"Str\"] = \"string\";\n    PackPrimitive[\"Bytes\"] = \"bytes\";\n    PackPrimitive[\"Bytes32\"] = \"bytes32\";\n    PackPrimitive[\"Bytes65\"] = \"bytes65\";\n})(PackPrimitive = exports.PackPrimitive || (exports.PackPrimitive = {}));\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst unmarshalPackPrimitive = (type, value) => {\n    switch (type) {\n        // Booleans\n        case PackPrimitive.Bool:\n            return value;\n        // Integers\n        case PackPrimitive.U8:\n        case PackPrimitive.U16:\n        case PackPrimitive.U32:\n        case PackPrimitive.U64:\n        case PackPrimitive.U128:\n        case PackPrimitive.U256:\n            return new bignumber_js_1.default(value);\n        // Strings\n        case PackPrimitive.Str:\n            return value;\n        // Bytes\n        case PackPrimitive.Bytes:\n        case PackPrimitive.Bytes32:\n        case PackPrimitive.Bytes65:\n            return utils_1.fromBase64(value);\n    }\n};\nexports.unmarshalPackPrimitive = unmarshalPackPrimitive;\nconst unmarshalPackStruct = (type, value) => {\n    const struct = {};\n    for (const member of type.struct) {\n        const keys = Object.keys(member);\n        if (keys.length === 0) {\n            throw new Error(`Invalid struct member with no entries.`);\n        }\n        if (keys.length > 1) {\n            throw new Error(`Invalid struct member with multiple entries.`);\n        }\n        const key = Object.keys(member)[0];\n        const memberType = member[key];\n        if (value && !value.hasOwnProperty(key)) {\n            throw new Error(`Missing pack value for key ${key}.`);\n        }\n        struct[key] = exports.unmarshalPackValue(memberType, value[key]);\n    }\n    return struct;\n};\nexports.unmarshalPackStruct = unmarshalPackStruct;\n/**\n * Unmarshals a pack array.\n */\nconst unmarshalPackArray = (type, value) => {\n    return value.map((element) => exports.unmarshalPackValue(type.list, element));\n};\nexports.unmarshalPackArray = unmarshalPackArray;\nconst unmarshalPackValue = (type, value) => {\n    if (Array.isArray(value)) {\n        return exports.unmarshalPackArray(type, value);\n    }\n    else if (typeof type === \"object\") {\n        return exports.unmarshalPackStruct(type, value);\n    }\n    else if (typeof type === \"string\") {\n        if (type === \"nil\")\n            return null;\n        return exports.unmarshalPackPrimitive(type, value);\n    }\n    throw new Error(`Unknown value type ${String(type)}${!type ? ` for value ${String(value)}` : \"\"}.`);\n};\nexports.unmarshalPackValue = unmarshalPackValue;\nconst unmarshalTypedPackValue = ({ t, v }) => {\n    return exports.unmarshalPackValue(t, v);\n};\nexports.unmarshalTypedPackValue = unmarshalTypedPackValue;\n//# sourceMappingURL=pack.js.map"]},"metadata":{},"sourceType":"script"}