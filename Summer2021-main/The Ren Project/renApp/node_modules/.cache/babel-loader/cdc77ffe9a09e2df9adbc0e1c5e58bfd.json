{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Callable } from \"@renproject/utils\";\nimport axios from \"axios\";\nimport { fixUTXO, fixUTXOs, fixValue, sortUTXOs, DEFAULT_TIMEOUT } from \"./API\";\nexport class BitcoinDotComClass {\n  constructor({\n    testnet = false\n  } = {}) {\n    this.endpoint = () => this.testnet ? \"https://trest.bitcoin.com/v2/\" : \"https://rest.bitcoin.com/v2/\";\n\n    this.endpointV2 = () => this.testnet ? \"https://explorer-tbch.api.bitcoin.com/tbch/v1\" : \"https://explorer.api.bitcoin.com/bch/v1\";\n\n    this.fetchUTXO = (txHash, vOut) => __awaiter(this, void 0, void 0, function* () {\n      const url = `${this.endpointV2()}/tx/${txHash}`;\n      const response = yield axios.get(`${url}`, {\n        timeout: DEFAULT_TIMEOUT\n      });\n      const utxo = response.data;\n      return fixUTXO({\n        txHash,\n        amount: utxo.vout[vOut].value.toString(),\n        vOut,\n        confirmations: utxo.confirmations\n      }, 8);\n    });\n\n    this.fetchUTXOs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n      const url = `${this.endpointV2()}/addr/${address}/utxo`;\n      const response = yield axios.get(url, {\n        timeout: DEFAULT_TIMEOUT\n      });\n      return fixUTXOs(response.data.map(utxo => ({\n        txHash: utxo.txid,\n        amount: utxo.amount.toString(),\n        vOut: utxo.vout,\n        confirmations: utxo.confirmations\n      })).filter(utxo => confirmations === 0 || utxo.confirmations >= confirmations), 8).sort(sortUTXOs);\n    });\n\n    this.fetchTXs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n      const url = `${this.endpoint().replace(/\\/$/, \"\")}/address/transactions/${address}`;\n      const {\n        data\n      } = yield axios.get(url, {\n        timeout: DEFAULT_TIMEOUT\n      });\n      const received = [];\n\n      for (const tx of data.txs) {\n        for (let i = 0; i < tx.vout.length; i++) {\n          const vout = tx.vout[i];\n\n          if (vout.scriptPubKey.addresses.indexOf(address) >= 0) {\n            received.push({\n              txHash: tx.txid,\n              amount: fixValue(parseFloat(vout.value), 8).toFixed(),\n              vOut: i,\n              confirmations: tx.confirmations\n            });\n          }\n        }\n      }\n\n      return received.filter(utxo => confirmations === 0 || utxo.confirmations >= confirmations).sort(sortUTXOs);\n    });\n\n    this.broadcastTransaction = txHex => __awaiter(this, void 0, void 0, function* () {\n      const url = `${this.endpoint().replace(/\\/$/, \"\")}/rawtransactions/sendRawTransaction`;\n      const response = yield axios.post(url, {\n        hexes: [txHex]\n      }, {\n        timeout: DEFAULT_TIMEOUT\n      });\n\n      if (response.data.error) {\n        throw new Error(response.data.error);\n      }\n\n      return response.data[0];\n    });\n\n    this.testnet = testnet;\n  }\n\n}\nexport const BitcoinDotCom = Callable(BitcoinDotComClass);","map":{"version":3,"sources":["../../../src/APIs/bitcoinDotCom.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Callable } from \"@renproject/utils\";\nimport axios from \"axios\";\nimport { fixUTXO, fixUTXOs, fixValue, sortUTXOs, DEFAULT_TIMEOUT, } from \"./API\";\nexport class BitcoinDotComClass {\n    constructor({ testnet = false } = {}) {\n        this.endpoint = () => this.testnet\n            ? \"https://trest.bitcoin.com/v2/\"\n            : \"https://rest.bitcoin.com/v2/\";\n        this.endpointV2 = () => this.testnet\n            ? \"https://explorer-tbch.api.bitcoin.com/tbch/v1\"\n            : \"https://explorer.api.bitcoin.com/bch/v1\";\n        this.fetchUTXO = (txHash, vOut) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpointV2()}/tx/${txHash}`;\n            const response = yield axios.get(`${url}`, {\n                timeout: DEFAULT_TIMEOUT,\n            });\n            const utxo = response.data;\n            return fixUTXO({\n                txHash,\n                amount: utxo.vout[vOut].value.toString(),\n                vOut,\n                confirmations: utxo.confirmations,\n            }, 8);\n        });\n        this.fetchUTXOs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpointV2()}/addr/${address}/utxo`;\n            const response = yield axios.get(url, {\n                timeout: DEFAULT_TIMEOUT,\n            });\n            return fixUTXOs(response.data\n                .map((utxo) => ({\n                txHash: utxo.txid,\n                amount: utxo.amount.toString(),\n                vOut: utxo.vout,\n                confirmations: utxo.confirmations,\n            }))\n                .filter((utxo) => confirmations === 0 ||\n                utxo.confirmations >= confirmations), 8).sort(sortUTXOs);\n        });\n        this.fetchTXs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpoint().replace(/\\/$/, \"\")}/address/transactions/${address}`;\n            const { data } = yield axios.get(url, {\n                timeout: DEFAULT_TIMEOUT,\n            });\n            const received = [];\n            for (const tx of data.txs) {\n                for (let i = 0; i < tx.vout.length; i++) {\n                    const vout = tx.vout[i];\n                    if (vout.scriptPubKey.addresses.indexOf(address) >= 0) {\n                        received.push({\n                            txHash: tx.txid,\n                            amount: fixValue(parseFloat(vout.value), 8).toFixed(),\n                            vOut: i,\n                            confirmations: tx.confirmations,\n                        });\n                    }\n                }\n            }\n            return received\n                .filter((utxo) => confirmations === 0 || utxo.confirmations >= confirmations)\n                .sort(sortUTXOs);\n        });\n        this.broadcastTransaction = (txHex) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpoint().replace(/\\/$/, \"\")}/rawtransactions/sendRawTransaction`;\n            const response = yield axios.post(url, { hexes: [txHex] }, { timeout: DEFAULT_TIMEOUT });\n            if (response.data.error) {\n                throw new Error(response.data.error);\n            }\n            return response.data[0];\n        });\n        this.testnet = testnet;\n    }\n}\nexport const BitcoinDotCom = Callable(BitcoinDotComClass);\n//# sourceMappingURL=bitcoinDotCom.js.map"]},"metadata":{},"sourceType":"module"}