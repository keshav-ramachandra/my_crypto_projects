{"ast":null,"code":"var _jsxFileName = \"/home/kesha/Videos/app/src/features/nodeUpdater/Node.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box, Container, Row, Col } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { getBalanceAsync, getUserAsync, getNodeAsync, getDepositStatusAsync, updateNodeStats, isOwner, createNodeAsync, loadSelectElements, stakeRenAsync } from './nodeSlice';\nimport styles from './Node.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Node() {\n  _s();\n\n  //const fetchStatus = useSelector(state => state.node.status)\n  //const error = useSelector(state => state.node.error)\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.node.user);\n  const currentNode = useSelector(state => state.node.currentNode);\n  const balance = useSelector(state => state.node.balance); //const [user, setUser] = useState(null);\n  //const [amount, setAmount] = useState(0);\n\n  const [incrementAmount, setIncrementAmount] = useState(5000);\n  const options = useSelector(state => state.node.options); //dispatch(getUserAsync());\n\n  const status = useSelector(state => state.node.status);\n  const depositStatus = useSelector(state => state.node.depositStatus);\n  const nodeBalance = useSelector(state => state.node.balance);\n  const owner = useSelector(state => state.node.owner);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const handleChange = selectedOption => {\n    setSelectedOption(selectedOption);\n    console.log(selectedOption.value);\n    dispatch(updateNodeStats(parseInt(selectedOption.value))); //this prints the selected option\n  };\n\n  useEffect(() => {\n    dispatch(getUserAsync());\n    dispatch(isOwner());\n    dispatch(updateNodeStats(-1));\n    dispatch(loadSelectElements());\n  }, []);\n  let content;\n\n  if (owner == 'yes' && depositStatus == 'full') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(createNodeAsync(user)),\n        children: \"Create Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this);\n  } else if (owner == 'no' && depositStatus == 'full') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Owner yet to create a Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textbox,\n        \"aria-label\": \"Set increment amount\",\n        value: incrementAmount,\n        onChange: e => setIncrementAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.deposit,\n        onClick: () => {\n          dispatch(stakeRenAsync({\n            incrementAmount,\n            currentNode,\n            user\n          }));\n        },\n        children: \"Stake Ren\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: styles.node,\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: selectedOption,\n      onChange: handleChange,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: styles.attribute2,\n        children: \"User:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Col, {\n        className: styles.attribute_small2,\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: styles.attribute2,\n        children: \"Node id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Col, {\n        className: styles.attribute_value2,\n        children: currentNode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: styles.attribute2,\n        children: \"Node Balance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 14\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Col, {\n        className: styles.attribute_value2,\n        children: nodeBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 69\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: styles.attribute2,\n        children: \"deposit Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Col, {\n        className: styles.attribute_value2,\n        children: [depositStatus, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 71\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: styles.attribute2,\n        children: \"owner:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 14\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Col, {\n        className: styles.attribute_value2,\n        children: owner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Node, \"xzmGBrM6e87IjNyc0iOPJCD491Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Node;\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["/home/kesha/Videos/app/src/features/nodeUpdater/Node.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Box","Container","Row","Col","Select","getBalanceAsync","getUserAsync","getNodeAsync","getDepositStatusAsync","updateNodeStats","isOwner","createNodeAsync","loadSelectElements","stakeRenAsync","styles","Node","dispatch","user","state","node","currentNode","balance","incrementAmount","setIncrementAmount","options","status","depositStatus","nodeBalance","owner","selectedOption","setSelectedOption","handleChange","console","log","value","parseInt","content","textbox","e","target","deposit","attribute2","attribute_small2","attribute_value2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box, Container, Row, Col } from 'react-bootstrap';\n\nimport Select from 'react-select';\n\nimport {\n  getBalanceAsync,\n  getUserAsync,\n  getNodeAsync,\n  getDepositStatusAsync,\n  updateNodeStats,\n  isOwner,\n  createNodeAsync,\n  loadSelectElements,\n  stakeRenAsync\n} from './nodeSlice';\nimport styles from './Node.module.css';\n\nexport function Node() {\n  //const fetchStatus = useSelector(state => state.node.status)\n  //const error = useSelector(state => state.node.error)\n  \n\n\n\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.node.user);\n  const currentNode = useSelector(state => state.node.currentNode);\n  const balance = useSelector(state => state.node.balance);\n  //const [user, setUser] = useState(null);\n  //const [amount, setAmount] = useState(0);\n  const [incrementAmount, setIncrementAmount] = useState(5000);\n\n  const options = useSelector(state => state.node.options);\n  //dispatch(getUserAsync());\n  const status = useSelector(state => state.node.status) \n  const depositStatus = useSelector(state => state.node.depositStatus) \n  const nodeBalance = useSelector(state => state.node.balance)\n  const owner = useSelector(state => state.node.owner)\n\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n    console.log(selectedOption.value);\n    dispatch(updateNodeStats(parseInt(selectedOption.value)))\n     //this prints the selected option\n  }\n\n   useEffect(() => {\n      dispatch(getUserAsync())\n      dispatch(isOwner())\n      dispatch(updateNodeStats(-1))\n      dispatch(loadSelectElements())\n  \n  }, [])\n\n  \n  \n  let content\n\n  if (owner == 'yes' && depositStatus == 'full') {\n    content = <div><button onClick= { () => dispatch(createNodeAsync(user))}>Create Node</button></div>\n  }\n  else if(owner == 'no' && depositStatus == 'full'){\n    content = <div>Owner yet to create a Node</div>\n  }\n  else{\n    content = <div>\n    <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n    <button className={styles.deposit} onClick= { () => { dispatch(stakeRenAsync({incrementAmount, currentNode,user})); }  }>Stake Ren</button>\n    </div>\n  }\n\n\n  return (\n  \n    \n     <Container className={styles.node}>\n          <Select\n            value={selectedOption}\n            onChange={handleChange}\n            options={options}\n          />\n        <Row><Col className={styles.attribute2}>User:</Col> <Col className={styles.attribute_small2}>{user}</Col></Row>\n        <Row><Col className={styles.attribute2}>Node id:</Col> <Col className={styles.attribute_value2}>{currentNode}</Col></Row>\n        <Row><Col className={styles.attribute2}>Node Balance:</Col> <Col className={styles.attribute_value2}>{nodeBalance}</Col></Row>\n        <Row><Col className={styles.attribute2}>deposit Status:</Col> <Col className={styles.attribute_value2}>{depositStatus} </Col></Row>\n        <Row><Col className={styles.attribute2}>owner:</Col> <Col className={styles.attribute_value2}>{owner}</Col></Row>\n        {content}\n        \n    </Container>\n\n  )\n}\n"]},"metadata":{},"sourceType":"module"}