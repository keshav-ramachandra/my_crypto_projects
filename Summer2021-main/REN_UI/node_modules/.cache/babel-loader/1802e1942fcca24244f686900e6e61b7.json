{"ast":null,"code":"var _jsxFileName = \"/home/kesha/Videos/my-app/src/features/nodeUpdater/Node.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getBalanceAsync, getUserAsync, getNodeAsync, getDepositStatusAsync, updateNodeStats, isOwner, createNodeAsync } from './nodeSlice'; //import styles from './Node.module.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Node() {\n  _s();\n\n  //const fetchStatus = useSelector(state => state.node.status)\n  //const error = useSelector(state => state.node.error)\n  const user = useSelector(state => state.node.user);\n  const currentNode = useSelector(state => state.node.currentNode);\n  const balance = useSelector(state => state.node.balance); //const [user, setUser] = useState(null);\n\n  const status = useSelector(state => state.node.status);\n  const depositStatus = useSelector(state => state.node.depositStatus);\n  const nodeBalance = useSelector(state => state.node.balance);\n  const owner = useSelector(state => state.node.owner);\n  const dispatch = useDispatch(); //dispatch(getUserAsync());\n\n  useEffect(() => {\n    if (status == 'idle') {\n      dispatch(getUserAsync());\n      dispatch(isOwner());\n      dispatch(updateNodeStats());\n    }\n  }, []);\n  let content;\n\n  if (owner == 'yes') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Owner yet to create a Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"User: \", user]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Node id: \", currentNode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Node Balance: \", nodeBalance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"deposit Status : \", depositStatus, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"owner: \", owner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Node, \"zBbI1mCRrD27o169B/jypyENX0Q=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Node;\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["/home/kesha/Videos/my-app/src/features/nodeUpdater/Node.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getBalanceAsync","getUserAsync","getNodeAsync","getDepositStatusAsync","updateNodeStats","isOwner","createNodeAsync","Node","user","state","node","currentNode","balance","status","depositStatus","nodeBalance","owner","dispatch","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,eADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,qBAJF,EAKEC,eALF,EAMEC,OANF,EAOEC,eAPF,QAQO,aARP,C,CASA;;;AAEA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACrB;AACA;AACA,QAAMC,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,IAArB,CAAxB;AACA,QAAMG,WAAW,GAAGb,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,WAArB,CAA/B;AACA,QAAMC,OAAO,GAAGd,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWE,OAArB,CAA3B,CALqB,CAMrB;;AACA,QAAMC,MAAM,GAAGf,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWG,MAArB,CAA1B;AACA,QAAMC,aAAa,GAAGhB,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWI,aAArB,CAAjC;AACA,QAAMC,WAAW,GAAGjB,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWE,OAArB,CAA/B;AACA,QAAMI,KAAK,GAAGlB,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWM,KAArB,CAAzB;AACA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B,CAXqB,CAarB;;AAGCF,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIgB,MAAM,IAAI,MAAd,EAAsB;AACpBI,MAAAA,QAAQ,CAAChB,YAAY,EAAb,CAAR;AACAgB,MAAAA,QAAQ,CAACZ,OAAO,EAAR,CAAR;AACAY,MAAAA,QAAQ,CAACb,eAAe,EAAhB,CAAR;AAED;AACF,GAPS,EAOP,EAPO,CAAT;AAWD,MAAIc,OAAJ;;AAEA,MAAIF,KAAK,IAAI,KAAb,EAAoB;AAClBE,IAAAA,OAAO,gBAAG;AAAA,6BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAFD,MAGI;AACFA,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAGD,sBACE;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,4BACE;AAAA,2BAAWV,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,8BAAcG,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,mCAAmBI,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,sCAAsBD,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,4BAAYE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAjDeX,I;UAGDT,W,EACOA,W,EACJA,W,EAEDA,W,EACOA,W,EACFA,W,EACNA,W,EACGC,W;;;KAXHQ,I","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getBalanceAsync,\n  getUserAsync,\n  getNodeAsync,\n  getDepositStatusAsync,\n  updateNodeStats,\n  isOwner,\n  createNodeAsync,\n} from './nodeSlice';\n//import styles from './Node.module.css';\n\nexport function Node() {\n  //const fetchStatus = useSelector(state => state.node.status)\n  //const error = useSelector(state => state.node.error)\n  const user = useSelector(state => state.node.user);\n  const currentNode = useSelector(state => state.node.currentNode);\n  const balance = useSelector(state => state.node.balance);\n  //const [user, setUser] = useState(null);\n  const status = useSelector(state => state.node.status) \n  const depositStatus = useSelector(state => state.node.depositStatus) \n  const nodeBalance = useSelector(state => state.node.balance)\n  const owner = useSelector(state => state.node.owner)\n  const dispatch = useDispatch();\n\n  //dispatch(getUserAsync());\n  \n\n   useEffect(() => {\n    if (status == 'idle') {\n      dispatch(getUserAsync())\n      dispatch(isOwner())\n      dispatch(updateNodeStats())\n\n    }\n  }, [])\n\n  \n  \n  let content\n\n  if (owner == 'yes') {\n    content = <div><button>Create Node</button></div>\n  }\n  else{\n    content = <div>Owner yet to create a Node</div>\n  }\n\n\n  return (\n    <section className=\"posts-list\">\n      <h2>User: {user}</h2>\n\n      <h2>Node id: {currentNode}</h2>\n      <h2>Node Balance: {nodeBalance}</h2>\n      <h2>deposit Status : {depositStatus} </h2>\n      <h2>owner: {owner}</h2>\n      <h2>{content}</h2>\n      \n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}