{"ast":null,"code":"var _jsxFileName = \"/home/kesha/Videos/my-app/src/features/nodeUpdater/Node.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Select from 'react-select';\nimport { getBalanceAsync, getUserAsync, getNodeAsync, getDepositStatusAsync, updateNodeStats, isOwner, createNodeAsync, loadSelectElements } from './nodeSlice'; //import styles from './Node.module.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Node() {\n  _s();\n\n  //const fetchStatus = useSelector(state => state.node.status)\n  //const error = useSelector(state => state.node.error)\n  const user = useSelector(state => state.node.user);\n  const currentNode = useSelector(state => state.node.currentNode);\n  const balance = useSelector(state => state.node.balance); //const [user, setUser] = useState(null);\n\n  const options = useSelector(state => state.node.options);\n  const dispatch = useDispatch(); //dispatch(getUserAsync());\n\n  const status = useSelector(state => state.node.status);\n  const depositStatus = useSelector(state => state.node.depositStatus);\n  const nodeBalance = useSelector(state => state.node.balance);\n  const owner = useSelector(state => state.node.owner);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const handleChange = selectedOption => {\n    setSelectedOption(selectedOption);\n    console.log(selectedOption.value);\n    dispatch(updateNodeStats(parseInt(selectedOption.value))); //this prints the selected option\n  };\n\n  useEffect(() => {\n    if (status == 'idle') {\n      dispatch(getUserAsync());\n      dispatch(isOwner());\n      dispatch(updateNodeStats(-1));\n      dispatch(loadSelectElements());\n    }\n  }, []);\n  let content;\n\n  if (owner == 'yes' && depositStatus == 'full') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(createNodeAsync(user)),\n        children: \"Create Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this);\n  } else if (owner == 'no' && depositStatus == 'full') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Owner yet to create a Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }, this);\n  } else {}\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-list\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: selectedOption,\n      onChange: handleChange,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"User: \", user]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Node id: \", currentNode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Node Balance: \", nodeBalance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"deposit Status : \", depositStatus, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"owner: \", owner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Node, \"iTi/o/K4s+BoDrxJrZ2hvflmpeE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Node;\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["/home/kesha/Videos/my-app/src/features/nodeUpdater/Node.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Select","getBalanceAsync","getUserAsync","getNodeAsync","getDepositStatusAsync","updateNodeStats","isOwner","createNodeAsync","loadSelectElements","Node","user","state","node","currentNode","balance","options","dispatch","status","depositStatus","nodeBalance","owner","selectedOption","setSelectedOption","handleChange","console","log","value","parseInt","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Select from 'react-select';\n\nimport {\n  getBalanceAsync,\n  getUserAsync,\n  getNodeAsync,\n  getDepositStatusAsync,\n  updateNodeStats,\n  isOwner,\n  createNodeAsync,\n  loadSelectElements\n} from './nodeSlice';\n//import styles from './Node.module.css';\n\nexport function Node() {\n  //const fetchStatus = useSelector(state => state.node.status)\n  //const error = useSelector(state => state.node.error)\n  const user = useSelector(state => state.node.user);\n  const currentNode = useSelector(state => state.node.currentNode);\n  const balance = useSelector(state => state.node.balance);\n  //const [user, setUser] = useState(null);\n\n  const options = useSelector(state => state.node.options);\n\n\n\n\n  const dispatch = useDispatch();\n\n  //dispatch(getUserAsync());\n  const status = useSelector(state => state.node.status) \n  const depositStatus = useSelector(state => state.node.depositStatus) \n  const nodeBalance = useSelector(state => state.node.balance)\n  const owner = useSelector(state => state.node.owner)\n\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n    console.log(selectedOption.value);\n    dispatch(updateNodeStats(parseInt(selectedOption.value)))\n     //this prints the selected option\n  }\n\n   useEffect(() => {\n    if (status == 'idle') {\n      dispatch(getUserAsync())\n      dispatch(isOwner())\n      dispatch(updateNodeStats(-1))\n      dispatch(loadSelectElements())\n    }\n\n\n  \n  }, [])\n\n  \n  \n  let content\n\n  if (owner == 'yes' && depositStatus == 'full') {\n    content = <div><button onClick= { () => dispatch(createNodeAsync(user))}>Create Node</button></div>\n  }\n  else if(owner == 'no' && depositStatus == 'full'){\n    content = <div>Owner yet to create a Node</div>\n  }\n  else{\n    \n  }\n\n\n  return (\n    <section className=\"posts-list\">\n      \n      <Select\n        value={selectedOption}\n        onChange={handleChange}\n        options={options}\n      />\n      <h2>User: {user}</h2>\n\n      <h2>Node id: {currentNode}</h2>\n      <h2>Node Balance: {nodeBalance}</h2>\n      <h2>deposit Status : {depositStatus} </h2>\n      <h2>owner: {owner}</h2>\n      <h2>{content}</h2>\n      \n      \n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}